S -> FULL_STATEMENT S
S -> FOR_LOOP S
S -> WHILE_LOOP S
S -> DO_WHILE_LOOP S
S -> FUNCTION_METHOD S
S -> EMPTY
FOR_LOOP -> FOR PAREN_OPEN INIT_STATEMENT SEMICOLON COND_STATEMENT SEMICOLON EVAL_STATEMENT PAREN_CLOSE CURFEW_OPEN LOOP_BODY CURFEW_CLOSE
FOR_LOOP -> FOR PAREN_OPEN VARIABLE IN OBJ PAREN_CLOSE CURFEW_OPEN LOOP_BODY CURFEW_CLOSE
FOR_LOOP -> FOR PAREN_OPEN VARIABLE OF OBJ PAREN_CLOSE CURFEW_OPEN LOOP_BODY CURFEW_CLOSE
WHILE_LOOP -> WHILE PAREN_OPEN COND_STATEMENT PAREN_CLOSE CURFEW_OPEN LOOP_BODY CURFEW_CLOSE
DO_WHILE_LOOP -> DO CURFEW LOOP_BODY CURFEW WHILE PAREN_OPEN COND_STATEMENT PAREN_CLOSE
INIT_STATEMENT -> STATEMENT ASSIGN_OP STATEMENT
COND_STATEMENT -> STATEMENT COMPARISON_OP STATEMENT | STATEMENT BOOL_OP STATEMENT
EVAL_STATEMENT -> STATEMENT OP
EVAL_STATEMENT -> STATEMENT OP STATEMENT
LOOP_BODY -> FULL_STATEMENT
LOOP_BODY -> FULL_STATEMENT BREAK
LOOP_BODY -> FULL_STATEMENT CONTINUE
LOOP_BODY -> BREAK
LOOP_BODY -> CONTINUE
LOOP_BODY -> FULL_STATEMENT BREAK FULL_STATEMENT
LOOP_BODY -> FULL_STATEMENT CONTINUE FULL_STATEMENT
LOOP_BODY -> BREAK FULL_STATEMENT
LOOP_BODY -> CONTINUE FULL_STATEMENT
LOOP_BODY -> FOR_LOOP | WHILE_LOOP | FUNCTION_METHOD
LOOP_BODY -> LOOP_BODY LOOP_BODY

FUNCTION_METHOD -> FUNCTION NAME PAREN_OPEN PARAMETER PAREN_CLOSE CURFEW FUNCT_BODY CURFEW (NAME GA WAJIB)
PARAMETER -> VARIABLE
PARAMETER -> PARAMETER COMMA PARAMETER
PARAMETER -> PARAMETER 'EQUAL_SIGN' PARAMETER (buat default parameter)
PARAMETER -> 'DOT_DOT_DOT' PARAMETER (buat rest parameter)
FUNCT_BODY -> FULL_STATEMENT RETURN
FUNCT_BODY -> RETURN
FUNCT_BODY -> FOR_LOOP | WHILE_LOOP | FUNCTION_METHOD
FUNCT_BODY -> FUNCT_BODY FUNCT_BODY
CALL_FUNCT -> NAME PAREN_OPEN VARIABLE PAREN_CLOSE | NAME PAREN_OPEN PAREN_CLOSE

FULL_STATEMENT -> STATEMENT SEMICOLON
FULL_STATEMENT -> FULL_STATEMENT FULL_STATEMENT
VARIABLE -> STRING
VARIABLE -> NUM
VARIABLE -> BOOL
VARIABLE -> NULL
ARRAY -> 'SQUARE_BRACKETS' ARR_INSIDE 'SQUARE_BRACKETS'
STATEMENT -> VARIABLE
STATEMENT -> ARRAY
STATEMENT -> STATEMENT OP STATEMENT
OP -> COMPARISON_OP
OP -> ARITHMETIC_OP
OP -> BOOL_OP
OP -> ASSIGN_OP
OP -> BIT_OP
STRING -> DOUBLE_QUOTE (BEBAS) DOUBLE_QUOTE | SINGLE_QUOTE (BEBAS) SINGLE_QUOTE /* Placeholder */
BOOL -> 'TRUE'
BOOL -> 'FALSE'
SIGN -> 'PLUS'
SIGN -> 'MINUS'
INTEGER -> 'TYPE_INT'
FLOAT -> 'TYPE_FLOAT'
NUM -> INTEGER
NUM -> SIGN INTEGER
NUM -> FLOAT
NUM -> SIGN FLOAT

OBJ -> 'OBJ'
FOR -> 'FOR'
WHILE -> 'WHILE'
DO -> 'DO'
COMPARISON_OP -> 'DOUBLE_EQUAL'
COMPARISON_OP -> 'TRIPLE_EQUAL'
COMPARISON_OP -> 'NOT_EQUAL'
COMPARISON_OP -> 'NOT_DOUBLE_EQUAL'
COMPARISON_OP -> 'GREATER'
COMPARISON_OP -> 'GREATER_EQUAL' 
COMPARISON_OP -> 'LESS'
COMPARISON_OP -> 'LESS_EQUAL'
COMPARISON_OP -> 'TERNARY'
ARITHMETIC_OP -> 'PLUS'
ARITHMETIC_OP -> 'MINUS'
ARITHMETIC_OP -> 'DIVIDE'
ARITHMETIC_OP -> 'MULTI'
ARITHMETIC_OP -> 'EXPO'
ARITHMETIC_OP -> 'MOD'
ARITHMETIC_OP -> INCREMENT
ARITHMETIC_OP -> DECREMENT
INCREMENT -> 'PLUS' 'PLUS'
DECREMENT -> 'MINUS' 'MINUS'
ASSIGN_OP -> 'EQUAL_SIGN'
ASSIGN_OP -> ARITHMETIC_OP 'EQUAL_SIGN'
ASSIGN_OP -> BOOL_OP 'EQUAL_SIGN' 
ASSIGN_OP -> BIT_OP 'EQUAL_SIGN'
BOOL_OP -> 'AND'
BOOL_OP -> 'OR'
BOOL_OP -> 'NULLISH'
BIT_OP -> 'BITWISE_AND'
BIT_OP -> 'BITWISE_OR'
BIT_OP -> 'XOR'
BIT_OP -> 'LEFT_SHIFT'
BIT_OP -> 'RIGHT_SHIFT'
BIT_OP -> 'UNSIGNED_RIGHT_SHIFT'
SEMICOLON -> 'SEMICOLON'
NOT -> 'NOT'
NULL -> 'NULL'
BREAK -> 'BREAK'
CONTINUE -> 'CONTINUE'
RETURN -> 'RETURN'
FUNCTION -> 'FUNCTION'
PAREN_OPEN -> 'PAREN_OPEN'
PAREN_CLOSE -> 'PAREN_CLOSE'
CURFEW_OPEN -> 'CURFEW_OPEN'
CURFEW_CLOSE -> 'CURFEW_CLOSE'
DOUBLE_QUOTE -> 'DOUBLE_QUOTE'
SINGLE_QUOTE -> 'SINGLE_QUOTE'

Keterangan : bagian bawah ini termasuk di yg lain
VARIABLE_DECLARE -> VAR OBJ SEMICOLON
VARIABLE_DECLARE -> VAR OBJ SEMICOLON
VARIABLE -> LET OBJ SEMICOLON
CONSTANT -> CONST OBJ EQUAL_SIGN TERM SEMICOLON